<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>es6的常用方法</title>
      <link href="/2020/05/09/es6%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/"/>
      <url>/2020/05/09/es6%E7%9A%84%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="类和继承（class和extends）"><a href="#类和继承（class和extends）" class="headerlink" title="类和继承（class和extends）"></a>类和继承（class和extends）</h3><ul><li><h4 id="clss声明类"><a href="#clss声明类" class="headerlink" title="clss声明类"></a>clss声明类</h4></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 构造器</span></span><br><span class="line">  <span class="keyword">constructor</span> (name, age) &#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name</span><br><span class="line">    <span class="keyword">this</span>.age = age</span><br><span class="line">  &#125;</span><br><span class="line">  showName () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.name</span><br><span class="line">  &#125;</span><br><span class="line">  showAge () &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">this</span>.age</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="string">'A'</span>, <span class="number">18</span>)</span><br><span class="line"><span class="keyword">var</span> p2 = <span class="keyword">new</span> Person(<span class="string">'B'</span>, <span class="number">20</span>)</span><br><span class="line"><span class="built_in">console</span>.log(p1.name) <span class="comment">// A</span></span><br><span class="line"><span class="built_in">console</span>.log(p1.showName()) <span class="comment">// A</span></span><br><span class="line"><span class="built_in">console</span>.log(p2.showAge()) <span class="comment">// 20</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="设置默认值"><a href="#设置默认值" class="headerlink" title="设置默认值"></a>设置默认值</h4></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="comment">// 构造器</span></span><br><span class="line">  <span class="keyword">constructor</span>(name='default',age=0)&#123;</span><br><span class="line">  <span class="keyword">this</span>.name = name;</span><br><span class="line">  <span class="keyword">this</span>.age = age;</span><br><span class="line">&#125;</span><br><span class="line">showName()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line">showAge()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> person = <span class="keyword">new</span> Person();</span><br><span class="line"><span class="built_in">console</span>.log(person.name); <span class="comment">// 构造器里面给的默认值 default</span></span><br><span class="line"><span class="built_in">console</span>.log(person.age); <span class="comment">// 构造器里面给的默认值 0</span></span><br></pre></td></tr></table></figure><ul><li><h4 id="实现类继承"><a href="#实现类继承" class="headerlink" title="实现类继承"></a>实现类继承</h4></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="comment">// 构造器</span></span><br><span class="line">  <span class="keyword">constructor</span>(name,age)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line">showName()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.name;</span><br><span class="line">&#125;</span><br><span class="line">showAge()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.age;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Worker</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line"><span class="keyword">constructor</span>(name,age,job='eat')&#123;</span><br><span class="line">  <span class="comment">// 继承超父类的属性</span></span><br><span class="line">  <span class="keyword">super</span>(name,age);</span><br><span class="line">  <span class="keyword">this</span>.job = job;</span><br><span class="line">&#125;</span><br><span class="line">showJob()&#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.job;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> p1 = <span class="keyword">new</span> Person(<span class="string">'cat'</span>,<span class="number">1</span>);</span><br><span class="line"><span class="keyword">var</span> w1 = <span class="keyword">new</span> Person(<span class="string">'dog'</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">var</span> w2 = <span class="keyword">new</span> Worker(<span class="string">'小红'</span>,<span class="number">9</span>);</span><br><span class="line"><span class="built_in">console</span>.log(w1.showName()); <span class="comment">// dog</span></span><br><span class="line"><span class="built_in">console</span>.log(w2.showJob()); <span class="comment">// 默认给的值 ‘eat’</span></span><br></pre></td></tr></table></figure><h3 id="set数据结构"><a href="#set数据结构" class="headerlink" title="set数据结构"></a>set数据结构</h3><ol><li><p>是一种新增的数据结构，类似于数组</p></li><li><p>元素都是唯一的</p><p>例如：</p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> <span class="keyword">set</span> = new Set();</span><br><span class="line">[1, 2, 3, 4, 5, 2, 1, 2, 1, 2].forEach(x =&gt; <span class="keyword">set</span>.add(x))</span><br><span class="line">for (let i of <span class="keyword">set</span>) &#123;</span><br><span class="line">  <span class="built_in">console</span>.log(i) <span class="comment">// 1 2 3 4 5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><h4 id="set的属性和方法"><a href="#set的属性和方法" class="headerlink" title="set的属性和方法"></a>set的属性和方法</h4><ol><li><p>获取size</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([1, 2, 3])</span><br><span class="line">console.log(<span class="keyword">set</span>.size) // 3</span><br></pre></td></tr></table></figure></li><li><h4 id="set的操作方法"><a href="#set的操作方法" class="headerlink" title="set的操作方法"></a>set的操作方法</h4><ul><li><p>add(val); 添加某个值</p></li><li><p>delete(val); // 删除某个值，返回布尔值，表示结果。</p></li><li><p>has(val); // 判断该值是否存在于Set中。</p></li><li><p>clear(); // 清楚所有的值</p><p>例如</p></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set()</span><br><span class="line">// add()添加某个值;</span><br><span class="line"><span class="keyword">set</span>.add(12).add(32)</span><br><span class="line">console.log(<span class="keyword">set</span>) // Set(2) &#123;<span class="number">12</span>, <span class="number">32</span>&#125;</span><br><span class="line"><span class="comment">// delete(val) 删除某个值</span></span><br><span class="line"><span class="keyword">set</span>.delete(32)</span><br><span class="line">console.log(<span class="keyword">set</span>) // Set(1) &#123;<span class="number">12</span>&#125;</span><br><span class="line"><span class="comment">// 3.has(val)判断该值是否存在于Set中</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="keyword">set</span>.has(88)) // false</span><br><span class="line">// 4.clear()</span><br><span class="line"><span class="keyword">set</span>.clear()</span><br><span class="line">console.log(<span class="keyword">set</span>) // Set(0) &#123;&#125;</span><br></pre></td></tr></table></figure></li><li><h4 id="set的遍历方法"><a href="#set的遍历方法" class="headerlink" title="set的遍历方法"></a>set的遍历方法</h4><ul><li>keys() 返回键名的方法</li><li>values() 返回键值的方法</li><li>entries() 返回键值对的方法</li><li>forEach() 用回调函数遍历各个元素的方法</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = new Set([1,2,3,4,5]);</span><br><span class="line"></span><br><span class="line">for(let item of <span class="keyword">set</span>.keys()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item); <span class="comment">// 1 2 3 4 5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">set</span>.values()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item); <span class="comment">// 1 2 3 4 5</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> item <span class="keyword">of</span> <span class="keyword">set</span>.entries()) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(item); <span class="comment">// [1, 1] [2, 2] [3, 3] [4, 4] [5, 5] </span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span>.forEach((value,key) =&gt; console.log(key+ '=' +value)); // 1=1 2=2 3=3 4=4 5=5</span><br></pre></td></tr></table></figure></li><li><h4 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h4><h5 id="实现数组去重"><a href="#实现数组去重" class="headerlink" title="...实现数组去重"></a><code>...</code>实现数组去重</h5><p>例如：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> arr = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">3</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> <span class="keyword">set</span> = [...new Set(arr)];</span><br><span class="line">console.log(<span class="keyword">set</span>); //[1, 2, 3, 4, 6]</span><br></pre></td></tr></table></figure><h5 id="使用Set实现并集、交集和差集"><a href="#使用Set实现并集、交集和差集" class="headerlink" title="使用Set实现并集、交集和差集"></a>使用Set实现并集、交集和差集</h5><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]);</span><br><span class="line"><span class="keyword">let</span> b = <span class="keyword">new</span> <span class="built_in">Set</span>([<span class="number">4</span>, <span class="number">3</span>, <span class="number">2</span>]);</span><br><span class="line"><span class="comment">// 并集</span></span><br><span class="line"><span class="keyword">let</span> union = <span class="keyword">new</span> <span class="built_in">Set</span>([...a, ...b]);<span class="comment">// Set &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"><span class="comment">// 交集</span></span><br><span class="line"><span class="keyword">let</span> intersect = <span class="keyword">new</span> <span class="built_in">Set</span>([...a].filter(<span class="function"><span class="params">x</span> =&gt;</span> b.has(x)));<span class="comment">// set &#123;2, 3&#125;</span></span><br><span class="line"><span class="comment">// 差集</span></span><br><span class="line"><span class="keyword">let</span> difference = <span class="keyword">new</span> <span class="built_in">Set</span>([...a].filter(<span class="function"><span class="params">x</span> =&gt;</span> !b.has(x)));<span class="comment">// Set &#123;1&#125;</span></span><br></pre></td></tr></table></figure></li></ol></li></ul>]]></content>
      
      
      <categories>
          
          <category> ES6 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ES6 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 添加分类及标签</title>
      <link href="/2017/05/26/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2017/05/26/Git%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h2 id="Git常用命令"><a href="#Git常用命令" class="headerlink" title="Git常用命令"></a>Git常用命令</h2><ul><li><p>生成ssh <code>ssh-keygen -o</code></p></li><li><p>关联远程仓库</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line">git remote add origin 仓库地址</span><br></pre></td></tr></table></figure></li></ul><h2 id="gitLab安装"><a href="#gitLab安装" class="headerlink" title="gitLab安装"></a>gitLab安装</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run --detach \</span><br><span class="line"> --hostname http:&#x2F;&#x2F;152.136.136.161 \</span><br><span class="line"> --publish 13800:80 --publish 13822:22 \</span><br><span class="line"> --name github_test \</span><br><span class="line"> --restart always \</span><br><span class="line"> gitlab&#x2F;gitlab-ce:latest</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo 添加分类及标签</title>
      <link href="/2017/05/26/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95Centos/"/>
      <url>/2017/05/26/ssh%E5%85%8D%E5%AF%86%E7%99%BB%E5%BD%95Centos/</url>
      
        <content type="html"><![CDATA[<h3 id="windos"><a href="#windos" class="headerlink" title="windos"></a>windos</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">cd ~.&#x2F;ssh</span><br><span class="line">cat id_rsa_pub</span><br><span class="line">复制内容</span><br><span class="line"></span><br><span class="line">切换到centos</span><br><span class="line">cd ~&#x2F;.ssh</span><br><span class="line">echo authorized_keys 刚刚复制的内容</span><br><span class="line">切换到windos</span><br><span class="line">在ssh目录新新建config文件，输入</span><br><span class="line">Host luck</span><br><span class="line">Port 10022</span><br><span class="line">HostName 152.136.136.161</span><br><span class="line">User root</span><br><span class="line">IdentityFile ~&#x2F;.ssh&#x2F;id_rsa</span><br><span class="line">IdentitiesOnly yes</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
